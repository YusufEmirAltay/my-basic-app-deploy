name: Flask CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Checkout second Repo
        uses: actions/checkout@v2
        with:
          repository: YusufEmirAltay/my-basic-app
          token: ${{ secrets.GITHUB_TOKEN }}
          path: my-basic-app

      - name: Get Latest Version from Docker Hub
        run: |
          # Get the latest tag from Docker Hub
          TAGS=$(curl -s "https://hub.docker.com/v2/repositories/ysufemrlty/my-basic-app/tags/?page_size=100" | jq -r '.results[].name')
          
          # Filter out non-version tags like "latest"
          VERSION_TAGS=$(echo "$TAGS" | grep '^v[0-9]*$')
          
          # If there are no tags, set the initial version as v1
          if [ -z "$VERSION_TAGS" ]; then
            NEXT_VERSION="v1"
          else
            # Get the highest version
            LAST_VERSION=$(echo "$VERSION_TAGS" | sort -V | tail -n 1)
            VERSION_NUM=$(echo $LAST_VERSION | sed 's/v//')
            NEXT_VERSION="v$((VERSION_NUM + 1))"
          fi

          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
          echo "Last version: $LAST_VERSION"
          echo "Next version: $NEXT_VERSION"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Flask Image with Cache
        run: |
          # Get previous version
          PREVIOUS_TAG="v$(( $(echo ${{ env.NEXT_VERSION }} | sed 's/v//') - 1 ))"
          echo "Previous tag: $PREVIOUS_TAG"
          docker pull ysufemrlty/my-basic-app:${PREVIOUS_TAG} || true
          # Build the new image with cache
          docker build --cache-from ysufemrlty/my-basic-app:${PREVIOUS_TAG} -t ysufemrlty/my-basic-app:${{ env.NEXT_VERSION }} -f my-basic-app/app/Dockerfile my-basic-app/app
          docker push ysufemrlty/my-basic-app:${{ env.NEXT_VERSION }}

      - name: Update deployment.yaml with new image tag
        run: |
          echo "Updating deployment.yaml with image tag: ${{ env.NEXT_VERSION }}"
          sed -i 's|ysufemrlty/my-basic-app:.*|ysufemrlty/my-basic-app:${{ env.NEXT_VERSION }}|' deploy/k8s-sources/flask/deployment.yaml

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add deploy/k8s-sources/flask/deployment.yaml
          git commit -m "Update Flask image to ${{ env.NEXT_VERSION }}"
          git push origin master
